parameters:
- name: artifactName
  displayName: Artifact Name
  type: string
  default: ''

- name: job_name_suffix
  displayName: job name
  type: string
  default: ''

- name: packageName
  displayName: Package Name
  type: string
  default: 'onnxruntime-android'

jobs:
- job: Final_AAR_Testing_Android_${{ parameters.job_name_suffix }}
  workspace:
    clean: all
  pool:
    # We need macOS-12 to run the Android emulator for now.
    # https://github.com/actions/runner-images/issues/7671
    vmImage: 'macOS-12'
  variables:
  - name: runCodesignValidationInjection
    value: false
  timeoutInMinutes: 90
  dependsOn:
    - Android_Java_API_AAR_Packaging_${{ parameters.job_name_suffix }}
  steps:
  - template: set-version-number-variables-step.yml

  - task: DownloadPipelineArtifact@2
    displayName: 'Download Final Android AAR'
    inputs:
      buildType: 'current'
      artifactName: '${{parameters.artifactName}}'
      targetPath: '$(Build.BinariesDirectory)/final-android-aar'

  - task: JavaToolInstaller@0
    displayName: Use jdk 11
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - template: use-android-ndk.yml

  - template: use-android-emulator.yml
    parameters:
      create: true
      start: true

  - script: |
      set -e -x
      mkdir android_test
      cd android_test
      cp -av $(Build.SourcesDirectory)/java/src/test/android ./
      cd ./android
      mkdir -p app/libs
      cp $(Build.BinariesDirectory)/final-android-aar/${{parameters.packageName}}-$(OnnxRuntimeVersion).aar app/libs/onnxruntime-android.aar
      $(Build.SourcesDirectory)/java/gradlew --no-daemon clean connectedDebugAndroidTest --stacktrace
    displayName: Run E2E test using Emulator
    workingDirectory: $(Build.BinariesDirectory)

  - template: use-android-emulator.yml
    parameters:
      stop: true

  - script: |
      set -e -x
      ls
      echo "$(find . -iname "*.apk")"
      echo "$PWD"
      cd android_test/android
      cd app/build/outputs/apk
      echo "##vso[task.setvariable variable=apk_dir]$PWD"
      echo "$(apk_dir)"
      cd $(Build.SourcesDirectory)
      ls
      cd onnxruntime/python/tools
      pip install requests
      python upload_and_run_browserstack_tests.py
        --id $(browserstack_username) \
        --token $(browserstack_access_key) \
        --app_apk_path $(apk_dir)/debug/app-debug.apk \
        --test_apk_path $(apk_dir)/androidTest/debug/app-debug-androidTest.apk
    displayName: install requests
    workingDirectory: $(Build.BinariesDirectory)

  # - template: use-browserstack.yml

#  - template: use-android-emulator.yml
 #   parameters:
  #    stop: true

  - template: component-governance-component-detection-steps.yml
    parameters :
      condition : 'succeeded'

  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()
